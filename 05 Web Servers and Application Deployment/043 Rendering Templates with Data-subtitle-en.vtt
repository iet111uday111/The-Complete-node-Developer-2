WEBVTT

00:00.750 --> 00:06.750
In the last couple of videos we looked at multiple ways that we can render HTL using Express we pass

00:06.750 --> 00:11.370
them H.T. now into response not send but obviously that was not ideal.

00:11.370 --> 00:14.220
It's a real pain to write your markup in a string.

00:14.220 --> 00:20.010
We also created a public directory where we can have our static HVM all files like our help file and

00:20.010 --> 00:22.040
we can serve these up to the browser.

00:22.080 --> 00:23.150
Both of those work great.

00:23.160 --> 00:26.690
But there is a third solution and that's going to be the topic in this video.

00:26.760 --> 00:33.660
That is a templating engine a template the engine is going to let you render DML but do it in a dynamic

00:33.660 --> 00:39.680
way where you can inject values like a user name or the current date inside of the template.

00:39.690 --> 00:45.000
Kind of like you would in Ruby or HP using this templating engine you're also going to be able to create

00:45.030 --> 00:49.980
reusable markup for things like a header or a footer which is going to be the same on a lot of your

00:49.980 --> 00:50.790
pages.

00:50.890 --> 00:55.740
And this town pulling engine handlebars is going to be the topic of this video and the next.

00:55.740 --> 00:57.750
So let's go ahead and get started.

00:57.780 --> 01:00.840
The first thing we're going to do is install this module.

01:00.840 --> 01:04.620
This is a handlebars iView engine for Express.

01:04.620 --> 01:08.300
Now there are a ton of other view engines for Express for example.

01:08.310 --> 01:08.710
E.J..

01:08.740 --> 01:10.170
Yes or pug.

01:10.170 --> 01:13.520
I'm going with handlebars because I like its syntax the best.

01:13.530 --> 01:15.850
It's a great way to get started.

01:15.930 --> 01:18.210
Now I want to show you a few things inside of the browser.

01:18.210 --> 01:25.010
First up we are going to go to handlebars J s dot com.

01:25.140 --> 01:27.620
This is the documentation for handlebars.

01:27.620 --> 01:31.020
It shows you exactly how to use all of its features.

01:31.040 --> 01:35.840
So if you want to use anything we don't cover inside of course you can always go here to learn how to

01:35.840 --> 01:36.910
use it.

01:36.910 --> 01:42.070
Now the thing we're going to be installing is actually a module that's a wrapper around handlebars.

01:42.080 --> 01:46.500
It's going to let us use it as an express iView engine to view this.

01:46.520 --> 01:53.840
We're going to go to and P.M. J.S. dot com forward slash package forward slash and the package name

01:53.840 --> 01:57.840
is H B S and this is the U R L structure for all packages.

01:57.860 --> 02:02.900
So if you ever want to find a packages page you simply type and Pam Jasc dot com forward slash package

02:02.960 --> 02:05.460
forward slash the package name.

02:05.560 --> 02:07.070
This module is pretty popular.

02:07.130 --> 02:09.820
It's a really great view engine they have a lot of documentation.

02:09.830 --> 02:12.520
I just want to let you know this exists as well.

02:12.530 --> 02:17.690
Now we can go ahead and install it and integrate it into our application over in the terminal.

02:17.690 --> 02:19.170
I'm going to install.

02:19.250 --> 02:27.940
Using NPM install the module name is abs and the most recent version is at four point zero point zero.

02:28.060 --> 02:31.120
And I will be using the saved flag to update package.

02:31.150 --> 02:37.750
Jason No actually configuring express to use this handlebars view engine is super simple.

02:37.760 --> 02:43.750
All we have to do is import and add one statement to our express configuration over inside of atom we're

02:43.750 --> 02:46.600
going to do just that inside of atom.

02:46.600 --> 02:50.750
Let's get started by loading in handlebars Konst.

02:50.880 --> 02:51.860
Yes.

02:51.870 --> 02:55.310
Equals require a B S.

02:55.390 --> 03:02.530
And from here we can go ahead and add that one line right above where I call app use for Express static.

03:02.530 --> 03:09.040
I'm going to call app dot set and this lets us set some various express related configurations.

03:09.070 --> 03:12.060
There's a lot of built in ones we'll be talking about more of them later.

03:12.070 --> 03:16.450
For now though what we're going to do is pass in a key value pair where the key is the thing you want

03:16.450 --> 03:20.400
to set and the value is the value you want to use here.

03:20.470 --> 03:22.190
The key we're setting is.

03:22.190 --> 03:24.040
View engine.

03:24.040 --> 03:28.930
This is going to tell express what view engine we'd like to use and we're going to pass in inside of

03:28.930 --> 03:29.590
quotes.

03:29.670 --> 03:36.430
Could be as perfect and that is all we need to do to get started now in order to create our very first

03:36.430 --> 03:37.130
template.

03:37.180 --> 03:40.810
What I'd like to do is make a directory in the project called views.

03:40.930 --> 03:45.320
Views is the default directory that express uses for your templates.

03:45.340 --> 03:48.960
So what we're going to do is add this and then we'll add a template inside of it.

03:49.120 --> 03:54.250
We've got a directory called views and inside of us we're going to go ahead and make a template for

03:54.250 --> 04:01.690
our About page right here a new file and the file name is going to be whatever you'd like in this case

04:01.690 --> 04:03.400
about Dot.

04:03.590 --> 04:06.310
As this handlebars extension is important.

04:06.310 --> 04:07.650
Make sure to include it.

04:07.900 --> 04:13.870
And Adam already knows how to parse B-S files down below where it shows the current language it's using

04:13.870 --> 04:20.240
it says it's using H.T. M-L in parentheses mustache mustache is used as the name for this type of handle

04:20.260 --> 04:25.850
bars syntax because when you type these curly braces I guess they kind of look like mustaches.

04:25.870 --> 04:31.380
What we're going to do to get started though is take the contents of help h t M-L and copy it directly

04:32.440 --> 04:37.120
I'm going to copy this file so we don't have to rewrite that boilerplate and we'll paste it right in

04:37.120 --> 04:37.950
here.

04:37.960 --> 04:40.920
Now we can go ahead and try to render this page.

04:40.960 --> 04:45.250
I am going to change the H one from help page to about page.

04:45.340 --> 04:49.120
We'll talk about how to dynamically render stuff inside here in just a second.

04:49.120 --> 04:53.440
What I'd like to do at first is just get this rendering over inside of a server.

04:53.490 --> 05:00.040
Yes we already have a route for forward slash about which means we can go ahead and render our template

05:00.190 --> 05:03.170
instead of sending back this about page string.

05:03.490 --> 05:10.210
I'm going to go ahead and remove our call to yes send and we're going to replace it with our Yes Dot

05:10.450 --> 05:15.790
render render is going to let you render any of the templates you have set up with your current view

05:15.790 --> 05:16.980
engine right here.

05:16.990 --> 05:21.310
I do indeed have my about template and I can pass that name about.

05:21.330 --> 05:22.120
HB Yes.

05:22.240 --> 05:29.880
In as the first and only argument we're going to render about Dot h that's perfect.

05:29.920 --> 05:31.110
Now we are done.

05:31.180 --> 05:34.750
This is going to be enough to get that static page rendering.

05:34.900 --> 05:36.660
I'm going to go ahead and save server Dot.

05:36.740 --> 05:37.110
Yes.

05:37.120 --> 05:39.850
And over in the terminal are clear the output.

05:39.850 --> 05:44.140
And I'm going to run our server using gnomon Nordman server.

05:44.290 --> 05:47.080
J.S. once the server is up and running.

05:47.140 --> 05:48.760
Here it is on port three thousand.

05:48.760 --> 05:54.190
We can go ahead and open up this forward slash about u r l and see what we get.

05:54.190 --> 06:02.530
I'm going to head into Krome close some tabs and open up a local host Colan 3000 a forward slash about.

06:02.950 --> 06:08.480
And when I do that what do I get I get my about page rendered just like you'd expected.

06:08.530 --> 06:13.910
We had an H1 tag which shows up nice and big and we have our paragraph tag which shows up below.

06:14.200 --> 06:15.390
So far we have used.

06:15.470 --> 06:18.790
Yes but we haven't actually used any of its features.

06:18.790 --> 06:20.760
Right now we're rendering a dynamic page.

06:20.770 --> 06:23.130
So we might as well have not even included it.

06:23.230 --> 06:27.580
What I want to do is talk about how we can inject data inside of our templates.

06:27.580 --> 06:32.270
Let's come up with some things that we want to make dynamic inside of our handlebars file.

06:32.530 --> 06:37.900
First up we're going to go ahead and make this H-1 tagged dynamic so the page name gets passed into

06:37.900 --> 06:38.710
the template.

06:38.710 --> 06:40.260
And we're also going to add a footer.

06:40.390 --> 06:43.270
For now we'll just make that a simple footer tag

06:46.890 --> 06:48.280
inside of the footer.

06:48.360 --> 06:53.650
We're going to go ahead and out a paragraph and that paragraph is going to have the copyright for our

06:53.650 --> 06:54.480
Web site.

06:54.550 --> 07:01.620
We'll just say something like copyright followed by the year which is 2016 now this year should also

07:01.620 --> 07:02.280
be dynamic.

07:02.280 --> 07:05.920
So as the years change we don't have to manually update our markup.

07:06.030 --> 07:11.160
We're going to go ahead and look at how to make both the 2016 and the about page dynamic which means

07:11.160 --> 07:16.260
they're getting passed in instead of being typed right in the handlebars file in order to do this.

07:16.260 --> 07:17.800
We're going to have to do two things.

07:17.880 --> 07:20.640
We're going to have to pass some data into the template.

07:20.640 --> 07:24.990
This is going to be an object a set of key value pairs and we're going to have to learn how to pull

07:24.990 --> 07:30.840
off some of those key value pairs inside of our handlebars while passing in data is pretty simple.

07:30.960 --> 07:35.340
All you have to do is specify a second argument to Ascot render.

07:35.400 --> 07:38.140
This is going to take an object in on this object.

07:38.160 --> 07:45.470
You can specify whatever you like I might have a page title that gets set equal to about page.

07:45.490 --> 07:46.120
There we go.

07:46.300 --> 07:48.810
We have one piece of data getting injected in the template.

07:48.820 --> 07:51.870
It's not used yet but it is indeed getting injected.

07:52.300 --> 07:55.400
We can also add another one like the current year.

07:55.750 --> 08:01.090
I'm going to put the current year right here and I'm going to set current year equal to the actual year

08:01.090 --> 08:04.300
off of the date javascript constructor.

08:04.300 --> 08:06.320
This is going to look something like this.

08:06.400 --> 08:11.530
We're going to create a new date which makes a new instance of the date object then we're going to use

08:11.530 --> 08:14.780
a method called Get full year which returns the year.

08:14.830 --> 08:23.160
In this case it would return 2016 just like this dot get full year.

08:23.200 --> 08:25.720
Now we have a page title and a current year.

08:25.770 --> 08:30.750
These are both getting passed in and we can go ahead and use them in order to use these pieces of data.

08:30.760 --> 08:36.000
What we have to do inside of our template is use that handle bars syntax which looks a little bit like

08:36.000 --> 08:36.880
this.

08:36.960 --> 08:42.540
You start by opening up to curly braces then you close it to curly braces and you can see that Adam

08:42.540 --> 08:47.810
actually picked up on it automatically and I didn't even need to type the closing brace inside of here.

08:47.820 --> 08:51.000
You can reference any of the props you passed in this case.

08:51.000 --> 08:58.770
I'm going to use page title here Page uppercase t title and down below inside of our copyright paragraph

08:59.010 --> 09:07.970
I'm going to go ahead and use inside of double curly braces current year and with this in place we now

09:07.970 --> 09:12.090
have two pieces of dynamic data and getting injected inside of our application.

09:12.320 --> 09:16.860
No gnomon should have restarted in the background so there's no need to manually do anything there.

09:16.940 --> 09:20.540
And when I refresh the page we do still get about page which is great.

09:20.540 --> 09:26.840
This is coming from the data we defined in server g s and we get copyright 2016 showing up.

09:26.840 --> 09:28.350
This is fantastic.

09:28.460 --> 09:31.640
Well this web page is pretty simple and doesn't look that interesting.

09:31.640 --> 09:36.650
At least you know how to create those servers and inject that data inside of your web page.

09:36.650 --> 09:41.550
All you'd have to do from here is add some custom styles to get things looking nice.

09:43.140 --> 09:47.490
Before we go ahead and get into the challenge I'm going to go ahead and move into the about file and

09:47.490 --> 09:48.910
swap out that title.

09:49.050 --> 09:50.340
Currently it says Help page.

09:50.340 --> 09:52.200
That's leftover from the public folder.

09:52.230 --> 09:56.490
I'm going to change it to some web site awesome.

09:56.730 --> 10:00.780
Now that we have this in place I'm going to go ahead and give you your challenge which is going to be

10:00.780 --> 10:05.250
to create a brand new template and that template is going to get rendered when someone visits the root

10:05.280 --> 10:06.170
of our Web site.

10:06.210 --> 10:08.360
The forward slash route.

10:08.400 --> 10:13.150
Now currently we render some Jason data when I want you to do is replace this with a call to response

10:13.150 --> 10:17.600
Scott render rendering a brand new view home dot H B S.

10:17.640 --> 10:23.390
Now this template doesn't exist you can duplicate the about HBL file or renaming it to home.

10:23.460 --> 10:23.750
H.

10:23.760 --> 10:25.030
B S.

10:25.260 --> 10:30.540
Now inside of home H.B. yes you're going to have the same H-1 you're also going to have your footer

10:30.810 --> 10:32.400
and you're going to have a new property.

10:32.400 --> 10:36.010
Welcome message which needs to get rendered inside of a paragraph tag.

10:36.150 --> 10:41.210
Now the about page is not going to support welcome message but the home page is going to need to.

10:41.220 --> 10:45.930
Which means aside from these two props that get passed and to render you're also going to need to pass

10:45.930 --> 10:50.450
in a third one welcome message and you can set it to whatever you like when you're done.

10:50.490 --> 10:52.690
You should be able to visit that page in a browser.

10:52.710 --> 10:55.640
You should see your page title which should be something like home page.

10:55.710 --> 10:56.950
Your welcome message.

10:56.950 --> 10:58.280
So that equal to whenever you like.

10:58.410 --> 11:00.750
And the copyright showing up.

11:00.750 --> 11:05.850
That's all going to be available at just the root of the Web site localhost 3000.

11:05.850 --> 11:07.590
So take a moment to knock all of that out.

11:07.590 --> 11:08.110
Test it.

11:08.130 --> 11:12.300
And when you're done and you do see things rendering when you visit the root of the Web site you can

11:12.300 --> 11:18.070
go ahead and click play.

11:18.130 --> 11:18.990
How'd you do.

11:19.000 --> 11:23.240
Hopefully it didn't have too much trouble creating that template and getting it to render.

11:23.240 --> 11:24.090
To get started.

11:24.100 --> 11:29.770
I'm going to duplicate the about JS file so we can start customizing it for our needs.

11:30.690 --> 11:33.690
Duplicate and I'll call this one home.

11:33.720 --> 11:35.050
HB Yes.

11:35.070 --> 11:37.320
Now from here most things are going to stay the same.

11:37.320 --> 11:39.320
We're going to keep the page title in place.

11:39.330 --> 11:42.620
We're also going to keep the copyright and footer down below.

11:42.690 --> 11:44.870
But I do want to change though is this paragraph.

11:44.940 --> 11:49.380
It was fine that the about page had a static one but for the home page we're going to set it equal to

11:50.040 --> 11:51.440
inside of curly braces.

11:51.540 --> 11:57.440
The welcome message property now welcome message is only going to be available on home.

11:57.450 --> 12:00.960
HB Yes which is why I'm specifying it here but not here.

12:01.380 --> 12:03.070
Next up you needed to call.

12:03.090 --> 12:06.300
Response not render inside of the callback.

12:06.330 --> 12:13.830
This is going to let us actually render that page response dot render passing in the template name we

12:13.830 --> 12:16.070
want to render this one is called home.

12:16.230 --> 12:16.900
Yes.

12:17.040 --> 12:20.430
Then we're going to pass in our data now to get started.

12:20.430 --> 12:23.660
We can go ahead and pass the page title.

12:23.880 --> 12:31.660
I'm going to set this equal to home page and we'll pass in some sort of generic welcome message Welcome

12:31.990 --> 12:33.350
to my Web site.

12:33.460 --> 12:36.070
Really great user experience there.

12:36.190 --> 12:41.540
And then we're going to pass in the current year and we already know how to fetch the current year new

12:41.540 --> 12:51.060
date and on the Date object we're going to call that get full year method and get full year perfect

12:51.780 --> 12:52.950
with this in place.

12:52.950 --> 12:57.600
All you needed to do was save the file which is automatically going to restart the server using gnomon

12:57.600 --> 12:59.280
and refresh the browser.

12:59.280 --> 13:00.570
When I do that what do I get.

13:00.570 --> 13:06.570
I get my home page title my welcome to my Web site message and my copyright with the year 2016 right

13:06.570 --> 13:07.190
here.

13:07.350 --> 13:11.560
And if I go to forward slash about everything still looks great.

13:11.560 --> 13:17.380
We have our dynamic page title and copyright and we have our static some text here text with this in

13:17.380 --> 13:20.580
place we are now done with the very basics of handlebars.

13:20.590 --> 13:24.390
Hopefully you see how this can be useful inside of a real world web app.

13:24.550 --> 13:30.070
Aside from a realistic example like the copyright other reasons you might use this is to inject some

13:30.070 --> 13:35.890
sort of dynamic user data things like a username and email or anything else now that you have a basic

13:35.890 --> 13:40.040
understanding about how to use handlebars to create static pages.

13:40.090 --> 13:43.220
We're going to go ahead and look at some more advanced features of abs.

13:43.270 --> 13:48.230
Inside of the next video I'm super excited to get to it because it's going to be really fantastic stuff.

13:48.250 --> 13:49.270
So stay tuned.

13:49.270 --> 13:50.330
I'll see you soon
